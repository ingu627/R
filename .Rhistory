# 스크립트 창
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
## 안녕녕
reticulate::repl_python()
print(2+3)
quit
## ---------------------------------------------------------------------- ##
a <- 1  # a에 1 할당
a       # a 출력
b <- 2
b
c <- 3
c
d <- 3.5
d
a+b
a+b+c
## -------------------------------------------------------------------- ##
var1 <- c(1, 2, 5, 7, 8)    # 숫자 다섯 개로 구성된 var1 생성
var1
var1
## -------------------------------------------------------------------- ##
var1 <- c(1, 2, 5, 7, 8)    # 숫자 다섯 개로 구성된 var1 생성, 벡터
var1
var3 <- seq(1, 5)           # 1~5까지 연속값으로 var3 생성
var3
var4 <- seq(1, 10, by = 2)  # 1~10까지 2 간격 연속값으로 var4 생성
var4
var5 <- seq(1, 10, by = 3)  # 1~10까지 3 간격 연속값으로 var5 생성
var5
var1
var1+2
var1
var2
var2 <- c(1:5)              # 1~5까지 연속값으로 var2 생성
var2 # R에서는 마지막 값 포함
var3 <- seq(1, 5)           # 1~5까지 연속값으로 var3 생성
var3
var4 <- seq(1, 10, by = 2)  # 1~10까지 2 간격 연속값으로 var4 생성
var4
var5 <- seq(1, 10, by = 3)  # 1~10까지 3 간격 연속값으로 var5 생성
var5
var1
var1+2
var1
var2
var1+var2
## -------------------------------------------------------------------- ##
str1 <- "a"
str1
str2 <- "text"
str2
str3 <- "Hello World!"
str3
str4 <- c("a", "b", "c")
str4
str5 <- c("Hello!", "World", "is", "good!")
str5
str1+2
str1+2
## -------------------------------------------------------------------- ##
# 변수 만들기
x <- c(1, 2, 3)
x
# 함수 적용하기
mean(x)
max(x)
min(x)
str5
paste(str5, collapse = ",")  # 쉼표를 구분자로 str4의 단어들 하나로 합치기
paste(str5, collapse = " ")
x_mean <- mean(x)
x_mean
str5_paste <- paste(str5, collapse = " ")
str5_paste
## -------------------------------------------------------------------- ##
# install.packages("ggplot2")  # ggplot2 패키지 설치
library(ggplot2)             # ggplot2 패키지 로드
# 여러 문자로 구성된 변수 생성
x <- c("a", "a", "b", "c")
x
# 빈도 그래프 출력
qplot(x)
## -------------------------------------------------------------------- ##
# install.packages("ggplot2")  # ggplot2 패키지 설치
library(ggplot2)  # 파이썬에 import랑 같은 의미
# 빈도 그래프 출력
qplot(x)
## -------------------------------------------------------------------- ##
# data에 mpg, x축에 hwy 변수 지정하여 그래프 생성
qplot(data = mpg, x = hwy)
# x축 cty
qplot(data = mpg, x = cty)
# x축 drv, y축 hwy
qplot(data = mpg, x = drv, y = hwy)
## -------------------------------------------------------------------- ##
# data에 mpg, x축에 hwy 변수 지정하여 그래프 생성
qplot(data = mpg, x = hwy)
mpg
# x축 drv, y축 hwy
qplot(data = mpg, x = drv, y = hwy)
# x축 drv, y축 hwy, 선 그래프 형태
qplot(data = mpg, x = drv, y = hwy, geom = "line")
# x축 drv, y축 hwy, 상자 그림 형태
qplot(data = mpg, x = drv, y = hwy, geom = "boxplot")
# x축 drv, y축 hwy, 상자 그림 형태, drv별 색 표현
qplot(data = mpg, x = drv, y = hwy, geom = "boxplot", colour = drv)
# qplot 함수 매뉴얼 출력
?qplot
# x축 drv, y축 hwy, 상자 그림 형태, drv별 색 표현
qplot(data = mpg, x = drv, y = hwy, geom = "boxplot", colour = drv)
# qplot 함수 매뉴얼 출력
?qplot
# qplot 함수 매뉴얼 출력
?qplot
english <- c(90, 80, 60, 70)  # 영어 점수 변수 생성
english
math <- c(50, 60, 100, 20)    # 수학 점수 변수 생성
math
math <- c(50, 60, 100, 20)    # 수학 점수 변수 생성
math
# english, math로 데이터 프레임 생성해서 df_midterm에 할당
df_midterm <- data.frame(english, math)
df_midterm
str(df_midterm)
# obs = observation (관측치)
# 데이터프레임 변수명$컬럼명 <==> # df['컬럼명']
df_midterm$english
class <- c(1, 1, 2, 2)
df_midterm <- data.frame(english, math, class)
class
# english, math로 데이터 프레임 생성해서 df_midterm에 할당
df_midterm <- data.frame(english, math)
df_midterm
class <- c(1, 1, 2, 2)
class
df_midterm <- data.frame(english, math, class)
df_midterm
df_midterm <- data.frame(english = c(90, 80, 60, 70),
math = c(50, 60, 100, 20),
class = c(1, 1, 2, 2))
df_midterm
## -------------------------------------------------------------------- ##
# install.packages("readxl")
library(readxl)
df_exam <- read_excel("excel_exam.xlsx")  # 엑셀 파일을 불러와서 df_exam에 할당
df_exam                                   # 출력
df_exam <- read_excel("excel_exam.xlsx")  # 엑셀 파일을 불러와서 df_exam에 할당
df_exam <- read_excel("./data/excel_exam.xlsx")  # 엑셀 파일을 불러와서 df_exam에 할당
df_exam                                   # 출력
df_exam <- read_excel("./data/excel_exam.xlsx")  # 엑셀 파일을 불러와서 df_exam에 할당
df_exam                                   # 출력
mean(df_exam$english)
mean(df_exam$science)
df_exam_novar <- read_excel("./data/excel_exam_novar.xlsx")
df_exam_novar
str(df_midterm)
job=c('student, 'teacher', 'ds', 'housewife'))
data.frame(addr=c('seoul','busan','daegu','incheon'),
age=c(25,35,45,30),
job=c('student', 'teacher', 'ds', 'housewife'))
